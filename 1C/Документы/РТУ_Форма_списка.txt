
Перем 		КоличествоЭкземпляровРасходных;
Перем 		КоличествоЭкземпляровКачественных;
Перем 		КоличествоЭкземпляровДекларации;
Перем 		КоличествоЭкземпляровКачественныхСтарых;
Перем 		ОбщееКоличествоПечати;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ 
//***
//***//
Перем ПутьФайлаСкрипта Экспорт;
Перем ФайлСкрипта Экспорт;
//***//

Процедура МенеджерПриИзменении(Элемент)
		
	Если Не Элемент.Значение=Неопределено Тогда
		Отбор.Реализатор.Использование=Истина;
	Иначе
		Отбор.Реализатор.Использование=Ложь;
	КонецЕсли;	
КонецПроцедуры

Процедура МенеджерОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	Элемент.Значение=Справочники.Контрагенты.ПустаяСсылка();
	Отбор.Реализатор.Использование=Ложь;
	
КонецПроцедуры
	
Процедура ПечатьКачественногоСвидетельстваИзСписка(Кнопка) 
	ТекущаяСтрока = ЭлементыФормы.Список.ТекущиеДанные;
	ЭтотОбъект = ТекущаяСтрока.Ссылка.ПолучитьОбъект();
	
	//*****************************  заголовок
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	ДоговорКонтрагента,
	|	ДоговорКонтрагента.ВидДоговора КАК ВидДоговораКонтрагента,
	|	ДоговорКонтрагента.ВедениеВзаиморасчетов КАК ДоговорВедениеВзаиморасчетов,
	|	ДоговорКонтрагента.НаименованиеДляПечати КАК ДоговорНаименованиеДляПечати,	
	|	ДоговорКонтрагента.ВыводитьИнформациюОСделкеПриПечатиДокументов КАК ПечататьСделку,	
	|	Сделка,
	|	Контрагент КАК Покупатель,
	|	Организация,
	|	Реализатор КАК Поставщик,
	|	Ответственный.ФизЛицо.Наименование КАК Выписал,
	|	ДоверенностьСерия,
	|	ДоверенностьНомер,
	|	ДоверенностьДата,
	|	ДоверенностьПолучил,
	|	СуммаДокумента,
	|	ВалютаДокумента,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	СтрокаВыборкиПоляСодержания = ОбработкаТабличныхЧастей.ПолучитьЧастьЗапросаДляВыбораСодержания("РеализацияТоваровУслуг");

	//*******************************         содержимое
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НомерТЧ,
	|	НомерСтрокиТЧ,
	|	Номенклатура,
	|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК Товар,
	|	Номенклатура.Код     КАК Код,
	|	Номенклатура.Артикул КАК Артикул,
	|	Количество,
	|	КоличествоМест,
	|	ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ЕдиницаИзмеренияМест.Представление КАК ЕдиницаИзмеренияМест,
	|	Цена,
	|	Сумма,
	|	СуммаНДС,
	|	ПроцентСкидкиНаценки КАК Скидка,
	|	ПроцентАвтоматическихСкидок КАК АвтоматическаяСкидка,
	|	ХарактеристикаНоменклатуры КАК Характеристика,
	|	СерияНоменклатуры КАК Серия
	|ИЗ 
	|	(ВЫБРАТЬ
	|		1 КАК НомерТЧ,
	|		МИНИМУМ(НомерСтроки) КАК НомерСтрокиТЧ,
	|		Номенклатура         КАК Номенклатура,
	|		ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
	|		ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
	|		Цена                 КАК Цена,
	|		СтавкаНДС            КАК СтавкаНДС,
	|		ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
	|		ПроцентАвтоматическихСкидок           КАК ПроцентАвтоматическихСкидок,
	|		СерияНоменклатуры    КАК СерияНоменклатуры,
	|		ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		СУММА(Количество)    КАК Количество,
	|		СУММА(КоличествоМест)КАК КоличествоМест,
	|		СУММА(Сумма)         КАК Сумма,
	|		СУММА(СуммаНДС)      КАК СуммаНДС
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	|	ГДЕ
	|		РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент и Количество<>0
	|	СГРУППИРОВАТЬ ПО
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		ЕдиницаИзмеренияМест,
	|		Цена,
	|		СтавкаНДС,
	|		ПроцентСкидкиНаценки,
	|		ПроцентАвтоматическихСкидок,
	|		СерияНоменклатуры,
	|		ХарактеристикаНоменклатуры
	|	) КАК ВложенныйЗапросПоТоварам
    | ";
	
	ЗапросТовары = Запрос.Выполнить().Выгрузить();

	
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Качественное";
    //***//
    Если ФайлСкрипта.Существует()   тогда
        ТекПринтер=ДополнительныеФункции.ПолучитьПринтерПоУмолчанию();
        Если ТекПринтер<>"" тогда
            ТабДокумент.ИмяПринтера= ТекПринтер;
        КонецЕсли;
    КонецЕсли;    
    //***
	Макет = ЭтотОбъект.ПолучитьМакет("Качественное");
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм"));
	//Макет.КодЯзыкаМакета = КодЯзыкаПечать;

	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.НомерДок = "ПОСВІДЧЕННЯ ПРО ЯКІСТЬ №  ________";//+ ЭтотОбъект.Номер;
	ОбластьМакета.Параметры.ПредставлениеПоставщика = СокрЛП(ЭтотОбъект.Организация.НаименованиеПолное) + "   Адреса: 61172, м.Харків, вул. Роганська, 151.";
	ОбластьМакета.Параметры.Отправитель =  СокрЛП(ЭтотОбъект.Организация.НаименованиеПолное) +"   (експлуатаційний дозвіл № 20 29 20 Mt)";;
	ОбластьМакета.Параметры.ПредставлениеПокупателя = ЭтотОбъект.Контрагент.Наименование ;
	//+" "+ЭтотОбъект.АдресДоставки; 
	ОбластьМакета.Параметры.ДатаДок = "Дата відвантаження  "+Формат(ЭтотОбъект.Дата,"ДФ=dd.MM.yyyy")+"  вид і номер транспортного засобу ___________________ ";
	//ОбластьМакета.Параметры.НомерДок2 = " Накладна (сертифікація) №  "+ЭтотОбъект.Номер+" від "+Формат(ЭтотОбъект.Дата,"ДФ=dd.MM.yyyy")+" 08:00:00 для реалізації";
	ОбластьМакета.Параметры.НомерДок2 = " Накладна (сертифікація) №  "+ЭтотОбъект.Номер+" від "+Формат(ЭтотОбъект.Дата,"ДФ=dd.MM.yyyy")+?(ЭтотОбъект.Контрагент.Код="000002431", " 10:00:00 "  ," 08:00:00 ") + " для реалізації";//Алексеенко А.А 06-02-2014
	
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьШапкиТаблицы= Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкиТаблицы);
	
	//ОбластьНомера	   = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	//ОбластьТовар	   = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
	//ОбластьМассаТовара = Макет.ПолучитьОбласть("ШапкаТаблицы|МассаТовара");
 	//ТабДокумент.Вывести(ОбластьНомера);
		
//	//ТабДокумент.Присоединить(ОбластьДанных);
//	ОбластьКолонкаТовар = Макет.Область("Товар");
//	ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + 
//											Макет.Область("Товар").ШиринаКолонки;
//	ОбластьМассаТовара = Макет.Область("МассаТовара");
//	ОбластьМассаТовара.ШиринаКолонки = ОбластьМассаТовара.ШиринаКолонки + 
//											Макет.Область("МассаТовара").ШиринаКолонки;
  
//	ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
//	ОбластьТовар  = Макет.ПолучитьОбласть("Строка|Товар");
//	ОбластьМассаТовара = Макет.ПолучитьОбласть("Строка|МассаТовара");
    ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");
	
	Сумма    = 0;
	СуммаНДС = 0;
	ВсегоСкидок    = 0;
	ВсегоБезСкидок = 0;
	ВсегоКоличество= 0;
	
	Для каждого ВыборкаСтрокТовары из ЗапросТовары Цикл 
		Если ВыборкаСтрокТовары.ЕдиницаИзмерения="кг" тогда
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;
	    //чтение свойств номенклатуры
		ЗапросРегСвед = Новый Запрос("ВЫБРАТЬ
				| *
				| ИЗ
				| РегистрСведений.ЗначенияСвойствОбъектов
				| ГДЕ Объект=&ООО");

		ЗапросРегСвед.УстановитьПараметр("ООО",ВыборкаСтрокТовары.Номенклатура);
		РегСвед =ЗапросРегСвед.Выполнить().Выгрузить();

		
		
		Для Каждого Запись ИЗ РегСвед Цикл   
			//Предупреждение("Свойство "+Запись.Свойство+"   "+"Запись.Значение "+ Запись.Значение, 10);
			Если СокрЛП(Запись.Свойство)="Время хранения"  Тогда
				ВрХранения=Запись.Значение;
			//	Сообщить("ВрХранения",Запись.Значение);
			КонецЕсли;		
			Если СокрЛП(Запись.Свойство)="Температура хранения"   Тогда
				Темп=Запись.Значение;
			//	Сообщить("Темп",Запись.Значение);
			КонецЕсли;	
			Если СокрЛП(Запись.Свойство)="Оболочка"    Тогда
				Обол=Запись.Значение;
			//	Сообщить("Обол",Запись.Значение);
			КонецЕсли;		
			Если СокрЛП(Запись.Свойство)="Упаковка"    Тогда
			//	Сообщить("Упак",Запись.Значение);
				Упак=Запись.Значение;
			КонецЕсли;		
			Если СокрЛП(Запись.Свойство)="Влажность хранения" Тогда
				Влаж=Запись.Значение;
			//	Сообщить("Влаж",Запись.Значение);
			КонецЕсли;		
			
		КонецЦикла;		
		
		ОбластьДанных.Параметры.НомерСтроки = ЗапросТовары.Индекс(ВыборкаСтрокТовары) + 1;
		ОбластьДанных.Параметры.Товар = ВыборкаСтрокТовары.Номенклатура;
		ОбластьДанных.Параметры.Артикул= ВыборкаСтрокТовары.Артикул;
		ОбластьДанных.Параметры.Влажность=Влаж;
		ОбластьДанных.Параметры.Температура=Темп;
		ОбластьДанных.Параметры.СрокГодности=ВрХранения;
		ОбластьДанных.Параметры.Количество=ВыборкаСтрокТовары.Количество;
		//ОбластьДанных.Параметры.ДатаИВремя = Формат(ЭтотОбъект.Дата,"ДФ=dd.MM.yyyy")+" 08:00:00 ";
		ОбластьДанных.Параметры.ДатаИВремя = Формат(ЭтотОбъект.Дата,"ДФ=dd.MM.yyyy")+?(ЭтотОбъект.Контрагент.Код="000002431", " 11:00:00 "  ," 08:00:00 ");//Алексеенко А.А 06-02-2014		
		
		//ТабДокумент.Присоединить(ОбластьДанных);
		ТабДокумент.Вывести(ОбластьДанных);
		ВсегоКоличество=ВсегоКоличество+ВыборкаСтрокТовары.Количество;
		КонецЕсли;	
	КонецЦикла;
	ОбластьИтогоКоличество = Макет.ПолучитьОбласть("Итого");
	ОбластьИтогоКоличество.Параметры.ИтогоКоличество= Формат(ВсегоКоличество,"ЧЦ=9; ЧДЦ=3");
    ТабДокумент.Вывести(ОбластьИтогоКоличество);
	
	ОбластьСтандарты = Макет.ПолучитьОбласть("Стандарты");	
	ТабДокумент.Вывести(ОбластьСтандарты);

	
	ОбластьОсобыеОтметки = Макет.ПолучитьОбласть("ОсобыеОтметки");	
	ТабДокумент.Вывести(ОбластьОсобыеОтметки );
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, 1, Ложь, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), ЭтотОбъект.Ссылка);
КонецПроцедуры // ПечатьКачественногоСвидетельства()
	

Процедура КонтрагентПриИзменении(Элемент)
		
	Если Не Элемент.Значение=Неопределено Тогда
		Отбор.Контрагент.Использование=Истина;
	Иначе
		Отбор.Контрагент.Использование=Ложь;
	КонецЕсли;	
КонецПроцедуры

Процедура КонтрагентОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	Элемент.Значение=Справочники.Контрагенты.ПустаяСсылка();
	Отбор.Контрагент.Использование=Ложь;
	
КонецПроцедуры

//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокументИзФормыСписка(ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект());

КонецПроцедуры // ДействиеПечать()

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	РаботаСДиалогами.НапечататьДвиженияДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

// Процедура открывает журнал проводок БУ с отбором по текущему регистратору
//
Процедура ДействияФормыПроводкиДтКт(Кнопка)

	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	БухгалтерскийУчет.ОткрытьЖурналПроводок(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры

// Обработчик события "Нажатие" кнопки "ОформитьДокументы" в верхней командной панели.
//
Процедура ДействияФормыОформитьДокументы(Кнопка)

	ТекущаяСтрока = ЭлементыФормы.Список.ТекущиеДанные;

	Если ТекущаяСтрока = Неопределено Тогда
		Возврат
	КонецЕсли;

	ТекущийОбъект = ТекущаяСтрока.Ссылка.ПолучитьОбъект();
	ФормаФормированияПакетаДокументов = ТекущийОбъект.ПолучитьФорму("ФормаФормированияПакетаДокументов", ЭтаФорма);
	ФормаФормированияПакетаДокументов.Реализация = ТекущийОбъект;
	ФормаФормированияПакетаДокументов.Открыть();

КонецПроцедуры // ДействияФормыОформитьДокументы()

// Процедура вызывается при нажатии кнопки "ВыгрузитьВФорматеCommerceMLФайлПанель"
// подменю "ВыгрузитьВФорматеCommerceMLПанель" командной панели формы
//
Процедура ДействияФормыВыгрузитьВФорматеCommerceMLФайлПанель(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнениеДокументов.ВыгрузитьДокументВФайлCommerceML(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);
    	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "ВыгрузитьВФорматеCommerceMLЭлПочтаПанель"
// подменю "ВыгрузитьВФорматеCommerceMLПанель" командной панели формы
//
Процедура ДействияФормыВыгрузитьВФорматеCommerceMLЭлПочтаПанель(Кнопка)
	
	Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнениеДокументов.ОтправитьДокументПоПочтеCommerceML(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры


Процедура ДействияФормыИмпорт(Кнопка)
	СписокДокументов     = Обработки.ИмпортДокументовУУ.Создать();
	ФормаСписокДокументов = СписокДокументов.ПолучитьФорму(,ЭтаФорма);
	ФормаСписокДокументов.Открыть();
КонецПроцедуры

Процедура ВетсвидетельствоНажатие(Элемент)
ТекущаяСтрока = ЭлементыФормы.Список.ТекущиеДанные;
ЭтотОбъект = ТекущаяСтрока.Ссылка.ПолучитьОбъект();
ФормаСВ=Документы.РеализацияТоваровУслуг.ПолучитьФорму("ФормаВетСвидетельства");
ФормаСВ.НомерТекущегоДокумента=ТекущаяСтрока.Номер;
ФормаСВ.Адрес=ЭтотОбъект.АдресДоставки;
ФормаСВ.ДатаТекущегоДокумента=ТекущаяСтрока.Дата;
ФормаСВ.КоличествоКг	= 	ЭтотОбъект.Товары.Итог("Количество");
ФормаСВ.МойДокумент		=	ЭтотОбъект.Ссылка;
//ТекущаяСтрока.ИтогоКоличествоТовара;
ФормаСВ.КоличествоНаименований=ЭтотОбъект.Товары.Количество();
ФормаСВ.КонтрагентНаименование=ЭтотОбъект.Контрагент.Наименование;
ФормаСВ.Открыть();
КонецПроцедуры

Процедура ПечатьНажатие(Элемент)

	ТекущаяСтрока = ЭлементыФормы.Список.ТекущиеДанные;
	ЭтотОбъект = ТекущаяСтрока.Ссылка.ПолучитьОбъект();
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ДействияФормыПечатьКомплекта(Кнопка)
    ТабДок= Новый ТаблицаЗначений;
    ТабДок.Колонки.Добавить("Наименование" ,Новый  ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200)));
    ТабДок.Колонки.Добавить("Номер"        ,Новый  ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20)));
    ТабДок.Колонки.Добавить("Дата"         ,Новый  ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20)));
    ТабДок.Колонки.Добавить("Сумма"        ,Новый  ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
        
	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;
	ТекущаяСтрока = ЭлементыФормы.Список.ТекущиеДанные;
	МойДокумент = ТекущаяСтрока.Ссылка.ПолучитьОбъект();
	
	ОбщееКоличествоПечати = МойДокумент.Контрагент.КоличествоЭкземпляровРасходныхНакладных+
							МойДокумент.Контрагент.КоличествоЭкземпляровКачественногоСвидетельства+
                            МойДокумент.Контрагент.КоличествоЭкземпляровКачественногоСвидетельстваСтарое+
							МойДокумент.Контрагент.КоличествоЭкземпляровДекларации+
							МойДокумент.Контрагент.КоличествоЭкземпляровТТН;
							
	Если ОбщееКоличествоПечати=0 тогда
		КоличествоЭкземпляровРасходных	 =2;
		КоличествоЭкземпляровКачественных=1;
		КоличествоЭкземпляровДекларации	 =1;
	Иначе 
		КоличествоЭкземпляровРасходных	 =МойДокумент.Контрагент.КоличествоЭкземпляровРасходныхНакладных;
		КоличествоЭкземпляровКачественных=МойДокумент.Контрагент.КоличествоЭкземпляровКачественногоСвидетельства;
		КоличествоЭкземпляровДекларации	 =МойДокумент.Контрагент.КоличествоЭкземпляровДекларации;
        КоличествоЭкземпляровКачественныхСтарых=МойДокумент.Контрагент.КоличествоЭкземпляровКачественногоСвидетельстваСтарое;
	КонецЕсли;	
	
	Если КоличествоЭкземпляровРасходных>0 тогда  
		//// Омега , Восторг, АльянсМаркет
		Если МойДокумент.Контрагент.Код="000000797"  или МойДокумент.Контрагент.Код="000002669" тогда
			//МойДокумент.Контрагент.Код="000001419"  или 
            ДокументПечати =МойДокумент.ПечатьОмега();
		ИначеЕсли  МойДокумент.Контрагент.Код="000001419"  тогда // Омега
			ДокументПечати =МойДокумент.ТранспортнаяНакладнаяОмега();
        ИначеЕсли МойДокумент.Контрагент.Код="000001920" тогда
            ДокументПечати =МойДокумент.ПечатьАШАН();
		ИначеЕсли МойДокумент.Контрагент.Код="000001651" ИЛИ  МойДокумент.Контрагент.Код="000002114" 
			ИЛИ  МойДокумент.Контрагент.Код="000003010"  тогда // фоззи  и новус-  Т.Н., Союз Ритейл Д 
            ДокументПечати =МойДокумент.ПечатьФоззи();
        ИначеЕсли МойДокумент.Контрагент.Код="000002482" ИЛИ МойДокумент.Контрагент.Код="000002743" тогда     //	АМСТОР ***
            ДокументПечати =МойДокумент.ПечатьТНАмстор();
		ИначеЕсли МойДокумент.Контрагент.Код="000002755" тогда     //	билла	***
            ДокументПечати =МойДокумент.НакладнаяБилла();
        ИначеЕсли МойДокумент.Контрагент.Код="000001372" ИЛИ МойДокумент.Контрагент.Код="000002694" тогда     //Адвентис
            ДокументПечати =МойДокумент.ПечатьАдвентис();
		ИначеЕсли МойДокумент.Контрагент.Код="000002827" ИЛИ МойДокумент.Контрагент.Код="000002828" тогда     //Джуна-Финест
			ДокументПечати =МойДокумент.НакладнаяДЖУНА();			
        Иначе
            ДокументПечати =МойДокумент.ПечатьДокумента();
        КонецЕсли;
        УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, КоличествоЭкземпляровРасходных, Истина);
        
        НовСтрокаТД=ТабДок.Добавить();
        НовСтрокаТД.Наименование   =?(МойДокумент.Контрагент.Код="000002482" ИЛИ МойДокумент.Контрагент.Код="000002743"  ,"Товарна накладна","Видаткова накладна");
        НовСтрокаТД.Номер               =СокрЛП(МойДокумент.Номер);
        НовСтрокаТД.Дата                =Формат(МойДокумент.Дата,"ДЛФ=D");
        НовСтрокаТД.Сумма               =Формат(МойДокумент.СуммаДокумента,"ЧДЦ=2; ЧН=' '; ЧГ=0");
        
	КонецЕсли;
	
	Если КоличествоЭкземпляровКачественных>0 тогда
        //ДокументПечати =МойДокумент.ПечатьКачественногоСвидетельства();
        ДокументПечати =МойДокумент.ПечатьДекларацииПроизводителя();
        УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати,КоличествоЭкземпляровКачественных, Истина);
        НовСтрокаТД=ТабДок.Добавить();
        НовСтрокаТД.Наименование   ="Декларацiя виробника";
        НовСтрокаТД.Номер               =СокрЛП("      ");
        НовСтрокаТД.Дата                =Формат(МойДокумент.Дата,"ДЛФ=D");
        НовСтрокаТД.Сумма               =Формат(0,"ЧДЦ=2; ЧН=' '; ЧГ=0");
	КонецЕсли;
    
	Если КоличествоЭкземпляровКачественныхСтарых>0 тогда
        ДокументПечати =МойДокумент.ПечатьКачественногоСвидетельства();
        УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати,КоличествоЭкземпляровКачественныхСтарых, Истина);
        НовСтрокаТД=ТабДок.Добавить();
        НовСтрокаТД.Наименование   ="Посвiдчення про якiсть";
        НовСтрокаТД.Номер               =СокрЛП("      ");
        НовСтрокаТД.Дата                =Формат(МойДокумент.Дата,"ДЛФ=D");
        НовСтрокаТД.Сумма               =Формат(0,"ЧДЦ=2; ЧН=' '; ЧГ=0");
	КонецЕсли;
	
		//Если ОбщееКоличествоПечати<>0 тогда
	//	УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, МойДокумент.Контрагент.КоличествоЭкземпляровДекларации, Истина);
	//Иначе	
	Если КоличествоЭкземпляровДекларации>0 тогда
		ДокументПечати =МойДокумент.ПечатьДекларации();
		УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, КоличествоЭкземпляровДекларации, Истина);
        НовСтрокаТД=ТабДок.Добавить();
        НовСтрокаТД.Наименование   ="Декларацiя";
        НовСтрокаТД.Номер               =СокрЛП(МойДокумент.Номер);
        НовСтрокаТД.Дата                =Формат(МойДокумент.Дата,"ДЛФ=D");
        НовСтрокаТД.Сумма               =Формат(0,"ЧДЦ=2; ЧН=' '; ЧГ=0");
	КонецЕсли;
	
	//печать ТТН
	Если МойДокумент.Контрагент.КоличествоЭкземпляровТТН<>0 тогда
		ДокументПечати =МойДокумент.ПечатьТТН();
		УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, МойДокумент.Контрагент.КоличествоЭкземпляровТТН, Истина);
        НовСтрокаТД=ТабДок.Добавить();
        НовСтрокаТД.Наименование   ="ТТН";
        НовСтрокаТД.Номер               =СокрЛП("      ");
        НовСтрокаТД.Дата                =Формат(МойДокумент.Дата,"ДЛФ=D");
        НовСтрокаТД.Сумма               =Формат(0,"ЧДЦ=2; ЧН=' '; ЧГ=0");
	КонецЕсли;
	
	//СпецНакладные Фоззи Фора //***AL06.09.2011 17:55:53 Куриченко просила Мац подтвердил ненужность
	//Если МойДокумент.Контрагент.Код="000001651" ИЛИ МойДокумент.Контрагент.Код="000001682" тогда
	//	ДокументПечати =МойДокумент.ПечатьФоззи();
	//	УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, 2, Истина);
	//КонецЕсли;
	
	//000003084  СКАЙ ФУД СЕРВІСЕС ТОВ 
	Если МойДокумент.Контрагент.Код="000003084" тогда
		ДокументПечати =МойДокумент.ПечатьДекларацияБезопасности();
		УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, 2, Истина);
	КонецЕсли;
	//***
	// Спецнакладные Фудмережа и Альварес
	Если МойДокумент.Контрагент.Код="000003022" или МойДокумент.Контрагент.Код="000003019" 
		или МойДокумент.Контрагент.Код="000003342" тогда
		ДокументПечати =МойДокумент.ПечатьТН();
		УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, 2, Истина);
        НовСтрокаТД=ТабДок.Добавить();
        НовСтрокаТД.Наименование   ="Транспортная накладная";
        НовСтрокаТД.Номер               =СокрЛП(МойДокумент.Номер);
        НовСтрокаТД.Дата                =Формат(МойДокумент.Дата,"ДЛФ=D");
        НовСтрокаТД.Сумма               =Формат(0,"ЧДЦ=2; ЧН=' '; ЧГ=0");
        // убрала Овчаренко Т.Н. 2015-12-25
		//ДокументПечати =МойДокумент.ПечатьТНТара();
		//УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, 2, Истина);
		//НовСтрокаТД=ТабДок.Добавить();
		//НовСтрокаТД.Наименование   ="Транспортная накладная на тару";
		//НовСтрокаТД.Номер               =СокрЛП(МойДокумент.Номер);
		//НовСтрокаТД.Дата                =Формат(МойДокумент.Дата,"ДЛФ=D");
		//НовСтрокаТД.Сумма               =Формат( 0 ,"ЧДЦ=2; ЧН=' '; ЧГ=0");
	КонецЕсли;
	//СпецНакладные Метро
	Если МойДокумент.Контрагент.Код="000001606"  тогда
		ДокументПечати =МойДокумент.ПечатьТНМЕТРО();
		УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, 2, Истина);
        НовСтрокаТД=ТабДок.Добавить();
        НовСтрокаТД.Наименование   ="Накладна";
        НовСтрокаТД.Номер               =СокрЛП(МойДокумент.Номер);
        НовСтрокаТД.Дата                =Формат(МойДокумент.Дата,"ДЛФ=D");
        НовСтрокаТД.Сумма               =Формат(МойДокумент.СуммаДокумента,"ЧДЦ=2; ЧН=' '; ЧГ=0");
        
        ДокументПечати =МойДокумент.ТоварнаяНакладнаяМЕТРО();
		УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, 2, Истина);
        НовСтрокаТД=ТабДок.Добавить();
        НовСтрокаТД.Наименование   ="Товарна накладна";
        НовСтрокаТД.Номер               =СокрЛП(МойДокумент.Номер);
        НовСтрокаТД.Дата                =Формат(МойДокумент.Дата,"ДЛФ=D");
        НовСтрокаТД.Сумма               =Формат( 0 ,"ЧДЦ=2; ЧН=' '; ЧГ=0");
	КонецЕсли;
    
    //АМСТОР *** печать заявки
    Если МойДокумент.Контрагент.Код="000002482" ИЛИ МойДокумент.Контрагент.Код="000002743" тогда
		ДокументПечати =МойДокумент.ПечатьЗаявкаАмстор();    
		УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, 1, Истина);
        НовСтрокаТД=ТабДок.Добавить();
        НовСтрокаТД.Наименование   ="Заявка ";
        НовСтрокаТД.Номер               =СокрЛП(МойДокумент.Номер);
        НовСтрокаТД.Дата                =Формат(МойДокумент.Дата,"ДЛФ=D");
        НовСтрокаТД.Сумма               =0
	ИНАЧЕ    //Определение налоговой накладной
		Если МойДокумент.Дата<Дата(2015,1,1) ИЛИ МойДокумент.Контрагент.Код="000001920" 
			ИЛИ МойДокумент.Контрагент.Код="000001888" тогда //***2014
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ДокументРеализации", МойДокумент.Ссылка);
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	НалоговаяНакладная.Ссылка,
			|	НалоговаяНакладная.Номер,
			|	НалоговаяНакладная.Дата
			|ИЗ
			|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
			|ГДЕ
			|	НалоговаяНакладная.ДокументОснование = &ДокументРеализации
			|	И НалоговаяНакладная.ПометкаУдаления = ЛОЖЬ";
			
			Запрос.Текст = ТекстЗапроса;
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Количество()>0 тогда
				Выборка.Следующий();
				НалоговаяНакладнаяСсылка=Выборка.Ссылка;                    
				МояНН=НалоговаяНакладнаяСсылка.ПолучитьОбъект();
				//ДокументПечати =МояНН.ПечатьНН2011();
				МассивСсылок = Новый Массив;
				МассивСсылок.Добавить(НалоговаяНакладнаяСсылка);
				
				ДокументПечати=Документы.НалоговаяНакладная.ПечатьДокумента(МассивСсылок, Неопределено);
				УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, 1, Истина);
				НовСтрокаТД=ТабДок.Добавить();
				НовСтрокаТД.Наименование   ="Податкова накладна";
				НовСтрокаТД.Номер               =СокрЛП(МояНН.Номер);
				НовСтрокаТД.Дата                =Формат(МояНН.Дата,"ДЛФ=D");
				НовСтрокаТД.Сумма               =Формат(МояНН.СуммаДокумента,"ЧДЦ=2; ЧН=' '; ЧГ=0");
			Иначе
				Сообщить("Не найдена налоговая накладная... ");
			КонецЕсли;
		КонецЕсли; //***2014
	КонецЕсли;    //АМСТОР ***
    
    //реестр  для всех Н.А. 19-12-12
    ДокументПечати =МойДокумент.ПечатьРеестраДокументов(ТабДок);
    КолКопий=1;
    Если МойДокумент.Контрагент.Код="000002097" тогда //таврия 01022013 Куриченко
        КолКопий=2;
    КонецЕсли;
    
    УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати,  КолКопий, Истина);

КонецПроцедуры

Процедура ДействияФормыОтправитьExite(Кнопка) ////***AL26.12.2011 12:49:35
	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;
	ТекущаяСтрока 	= ЭлементыФормы.Список.ТекущиеДанные;
	МойДокумент 	= ТекущаяСтрока.Ссылка.ПолучитьОбъект();
    //Если СокрЛП(МойДокумент.НомерПокупателя)="" тогда
    //	Предупреждение("Нет GLN номера покупателя! Продолжение обработки не возможно!",5);
    //	Возврат;
    //КонецЕсли;
	Если МойДокумент.Проведен<>Истина Тогда
		Предупреждение("Не проведен документ! Продолжение обработки не возможно!",5);
		Возврат;
	КонецЕсли;  
	Если МойДокумент.eXiteСостояние=Истина Тогда
		Предупреждение("Документ уже отправлен! Продолжение обработки не возможно!",5);
		Возврат;
	КонецЕсли;  
	//Если МойДокумент.Контрагент.GLN = неопределено тогда
	//	Предупреждение("Контрагент не имеет номера GLN! Продолжение обработки не возможно!",5);
	//	возврат;
	//КонецЕсли;
    //*** 000001652 - нова торгивельна мережа
    Если МойДокумент.Контрагент.Код="000001419" ИЛИ МойДокумент.Контрагент.Код="000002093" тогда
       	eXite = Обработки.ОтправкаСчетаExite.Создать();
	    eXite.ОтправитьДокументООтгрузке(МойДокумент);
    Иначе
    	eXite = Обработки.ОтправкаРеализацияExite.Создать();
	    eXite.ОтправитьДокументООтгрузке(МойДокумент);
    КонецЕсли;
    
КонецПроцедуры

Процедура ДействияФормыКнопкаПередатьФайлТаврии(Кнопка)
  	Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;
	ТекущаяСтрока 	= ЭлементыФормы.Список.ТекущиеДанные;
	МойДокумент 	= ТекущаяСтрока.Ссылка.ПолучитьОбъект();
    Если МойДокумент.Контрагент.Код="000002097" тогда
        МойДокумент.ВыгрузитьФайлНаТаврию();
    КонецЕсли;
КонецПроцедуры

//***//
ПутьФайлаСкрипта="C:\WINDIWS\SYSTEM32\vbscript.dll";
ФайлСкрипта = Новый Файл(ПутьФайлаСкрипта);
//***//

КоличествоЭкземпляровРасходных      =0;
КоличествоЭкземпляровКачественных   =0;
КоличествоЭкземпляровДекларации     =0;
КоличествоЭкземпляровКачественныхСтарых =0;
ОбщееКоличествоПечати               =0;
